/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
 
class Solution {
    public int maxLevelSum(TreeNode root) {
        
		int max = 0, maxlevel = 1;
		Queue<TreeNode> q = new LinkedList<TreeNode>();
		q.add(root);
		for (int level = 1; !q.isEmpty(); level++) {
			int sum = 0;
			for (int i = q.size(); i > 0; i--) {
				TreeNode node = q.poll();
				sum += node.val;
				if (node.left != null)
					q.add(node.left);
				if (node.right != null)
					q.add(node.right);

			}

			if (max < sum) {
				max = sum;
				maxlevel = level;

			}
		}

		return maxlevel;

	
    }
}
